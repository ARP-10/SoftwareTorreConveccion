- Desde el microcontrolador me llega la info por usb
- Recibiría el dato con su unidad 
- Son 5 datos los que se reciben, separados por tabulaciones
- Yo devuelvo un valor entre 0 y 255 (un numero)
- Cada medio segundo recibo la lista de los 5 valores
- grados centígrados (2, sensor de arriba y el de abajo), watios, velocidad del aire, termopar(otra temperatura) (en el labview se llaman: temp entrada, temp salida, temp termopar, velocidad aire y potencia heater)
- Al devolver, tengo que enviar un comando (readstringuntil)

TAREAS:
- Hacer que la grafica cuando lleva mucho tiempo representando datos que tenga un scroll para ver siempre la misma cantidad en tiempo de datos
- Hacer que los datos de la practica se conecten con nuestro servidor (api laravel)
- Actualizaciones remotas por internet. Hacer que se descargue un archivo que este en el servidor? Meter número de version del sw
- Hacer que el dato del ventilador y el calefactor se envie cada 500 milisegundos al microcontrolador
- Ahora cada dato lo vamos a recibir con su tipo desde el microcontrolador (hacer que se identifique cada uno y se coloque donde corresponda el programa), hacer que en caso de que llegue alguno otro, la tabla sea ampliable facil
- Falta traducir los pop-ups de "conectado", "transmitiendo datos", etc. 


IMPORTANTE ANTES DE CONVERTIR A .EXE
- Usae este comando para hacer que el logo se quede bien guardado (antes habra que convertir a .ico el icono): pyinstaller --onefile --windowed --icon="fotos\dikoin_logo.ico" it032_gui.py


API 
- Meter el json con las traducciones
- El valor apra identificar quien hace la práctica será el número de serie
/api/translations
/api/practices

Tabla machines:
    id, serial_number, model

Tabla practices: 
    Campos: id, machine_id (fk), date, time, te (temp de entrada), ts (temp de salida), tp (termopar), vel, pot, created_at(timestamp)